/*
 * Spectra Logic Corporation Software
 *
 * StorCycle® REST API Copyright © 2020 Spectra Logic Corporation
 *
 * API version: 0.1
 * Contact: developer@spectralogic.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi
// ApiProjectSchedule Schedule for the project. Determines when the project runs.
type ApiProjectSchedule struct {
	// For monthly and yearly schedules, list the calendar days of the month to execute.  If this number is past the last day of that month, the last day of the month is assumed.
	DaysOfMonth *[]int32 `json:"daysOfMonth,omitempty" xml:"daysOfMonth"`
	// For weekly and monthly schedules, list the days of the week in those weeks and months on which to execute.
	DaysOfWeek *[]string `json:"daysOfWeek,omitempty" xml:"daysOfWeek"`
	// The period should happen every n days/weeks/months/years.  This should be 1 for daily/weekly/monthly/yearly, 2 for every other day/week/month/year, 3 for every third, etc.
	Interval *int32 `json:"interval,omitempty" xml:"interval"`
	// For monthly and yearly schedules, list the months in which to execute.
	MonthsOfYear *[]string `json:"monthsOfYear,omitempty" xml:"monthsOfYear"`
	// How often to execute projects associated with this schedule.
	Period *string `json:"period" xml:"period"`
	// The day on which to start, from 1 to 31.  Ignored if the schedule period is Now.
	StartDay *int32 `json:"startDay,omitempty" xml:"startDay"`
	// The hour to start, from 0 to 23.  Ignored if the schedule period is Now.
	StartHour *int32 `json:"startHour,omitempty" xml:"startHour"`
	// The minute of the hour to start, from 0 to 59.  Ignored if the schedule period is Now.
	StartMinute *int32 `json:"startMinute,omitempty" xml:"startMinute"`
	// The month in which to start, from 1 to 12.  Ignored if the schedule period is Now.
	StartMonth *int32 `json:"startMonth,omitempty" xml:"startMonth"`
	// The year in which to start. Ignored if the schedule period is Now.
	StartYear *int32 `json:"startYear,omitempty" xml:"startYear"`
}
