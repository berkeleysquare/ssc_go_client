/*
 * Spectra Logic Corporation Software
 *
 * StorCycle® REST API Copyright © 2020 Spectra Logic Corporation
 *
 * API version: 0.1
 * Contact: developer@spectralogic.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi
// ApiStorageLocationBlackPearl Used to create BlackPearl storage locations.
type ApiStorageLocationBlackPearl struct {
	// For use only with BlackPearl.  The access key ID of the credentials for BlackPearl.
	AccessKeyId *string `json:"accessKeyId" xml:"accessKeyId"`
	// Used to re-activate a 'deleted' storage location.
	Active *bool `json:"active,omitempty" xml:"active"`
	// Sources can have an adGroup name associated with them to restrict access to users not in the group.
	ADGroup *string `json:"aDGroup,omitempty" xml:"aDGroup"`
	// For use only with BlackPearl.  The URL of the BlackPearl server data port.
	SpectraDataEndpoint *string `json:"spectraDataEndpoint" xml:"spectraDataEndpoint"`
	// For use only with BlackPearl.  The URL of the BlackPearl server management port.
	SpectraMgmtEndpoint *string `json:"spectraMgmtEndpoint" xml:"spectraMgmtEndpoint"`
	// For use only with BlackPearl.  The password to login to the management port.  This is write-only.
	SpectraPassword *string `json:"spectraPassword" xml:"spectraPassword"`
	// For use only with BlackPearl.  The username to login to the management port.
	SpectraUsername *string `json:"spectraUsername" xml:"spectraUsername"`
	// Used for BlackPearl endpoints.  The bucket/vault to use for storage.
	Bucket *string `json:"bucket" xml:"bucket"`
	// Used for specifying existing BlackPearl data policies.
	BucketPolicyId *string `json:"bucketPolicyId,omitempty" xml:"bucketPolicyId"`
	// Cost per TB of storage in units of department currency.  Only valid when Department is set.
	CostPerTB *float32 `json:"costPerTB,omitempty" xml:"costPerTB"`
	// ID of department responsible for location storage cost.
	Department *string `json:"department,omitempty" xml:"department"`
	// Description of the storage location.
	Description *string `json:"description,omitempty" xml:"description"`
	// Used to enable encryption that has been configured for the product.
	EnableEncryption *bool `json:"enableEncryption,omitempty" xml:"enableEncryption"`
	// Prevent location from use as a source. Set to true for BlackPearl.
	IsTarget *bool `json:"isTarget" xml:"isTarget"`
	// The limit during off-peak hours, expressed in total number of bytes per second.  Specify 0 for no limit.
	OffPeakBytesPerSecondLimit *float64 `json:"offPeakBytesPerSecondLimit,omitempty" xml:"offPeakBytesPerSecondLimit"`
	// The file scan limit during off-peak hours, expressed in total number of files per second. Specify 0 for no limit.
	OffPeakFilesPerSecondScanLimit *float64 `json:"offPeakFilesPerSecondScanLimit,omitempty" xml:"offPeakFilesPerSecondScanLimit"`
	// How archived data should be packed. Default is None.
	PackingType *string `json:"packingType,omitempty" xml:"packingType"`
	// The limit during peak hours, expressed in total number of bytes per second.  Specify 0 for no limit.
	PeakBytesPerSecondLimit *float64 `json:"peakBytesPerSecondLimit,omitempty" xml:"peakBytesPerSecondLimit"`
	// The file scan limit during peak hours, expressed in total number of files per second. Specify 0 for no limit.
	PeakFilesPerSecondScanLimit *float64 `json:"peakFilesPerSecondScanLimit,omitempty" xml:"peakFilesPerSecondScanLimit"`
	// A list of the days of the week where rate limits are enforced during peak and off-peak times.  If a day of week is not in the list, it is assumed to be unlimited.
	PeakTimesSchedule *[]ApiPeakTimeSchedule `json:"peakTimesSchedule,omitempty" xml:"peakTimesSchedule"`
	// The number of days to retain files on this target before scheduling files for deletion. This field is only applicable to targets.
	RetentionDays *int32 `json:"retentionDays,omitempty" xml:"retentionDays"`
	// For use only with BlackPearl. The secret access key of the credentials for BlackPearl. This is write-only.
	SecretAccessKey *string `json:"secretAccessKey" xml:"secretAccessKey"`
	Type *string `json:"type" xml:"type"`
}
